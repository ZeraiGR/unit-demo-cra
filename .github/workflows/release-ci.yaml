name: Release CI

on:
  push:
    tags:
      - 'v[0-9]+'

jobs:
  make-changelog:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Set Release Name
        run: echo "RELEASE_NAME=$(echo ${{ github.ref }} | sed 's#refs/tags/##')" >> $GITHUB_ENV
      
      - name: Get Last Release Tag
        id: last_tag
        run: echo "LAST_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Get Release Date
        id: release_date
        run: echo "RELEASE_DATE=$(git show -s --format=%ci ${{ env.RELEASE_NAME }})" >> $GITHUB_ENV

      - name: Install auto-changelog
        run: npm install -g auto-changelog

      - name: Generate Changelog
        run: auto-changelog --output CHANGELOG.md --starting-version ${{ env.LAST_TAG }}

      - name: Create Release
        run: |
          gh release create ${{ env.RELEASE_NAME }} ./CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find Existing Issue
        id: find_existing_issue
        run: |
          issue_number=$(gh issue list --state open --label "RELEASE" --author "${GITHUB_ACTOR}" --title "RELEASE: $RELEASE_NAME" --json number | jq -r '.[0].number')
          echo "::set-output name=issue_number::$issue_number"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NAME: ${{ env.RELEASE_NAME }}
      
      - name: Create or Update Release Issue
        id: create_or_update_issue
        run: |
          if [ -z "$RELEASE_DATE" ]; then
            RELEASE_DATE=$(date -u +'%Y-%m-%d')
          fi
          body=$(cat <<EOM
          ## Release Information

          **Tag:** $RELEASE_NAME
          **Version:** $RELEASE_NAME
          **Release Date:** $RELEASE_DATE
          **Author:** ${GITHUB_ACTOR}
          **Changelog:**

          $(cat CHANGELOG.md)
          EOM
          )
          if [ -z "${{ steps.find_existing_issue.outputs.issue_number }}" ]; then
            gh issue create --title "RELEASE: $RELEASE_NAME" --body "$body" --label "RELEASE" --debug
          else
            gh issue comment "${{ steps.find_existing_issue.outputs.issue_number }}" --body "$body"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NAME: ${{ env.RELEASE_NAME }}
          RELEASE_DATE: ${{ env.RELEASE_DATE }}