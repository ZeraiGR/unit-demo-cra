name: CI

on: [push, pull_request]

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install required dependencies
        run: |
          sudo apt update
          sudo apt install -y sudo
          sudo apt install -y git curl
          sudo curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
          sudo DEBIAN_FRONTEND=noninteractive apt install -y nodejs
      - name: Print versions
        run: |
          git --version
          node --version
          npm --version
          npx commitlint --version
      - name: Install commitlint
        run: |
          npm install conventional-changelog-conventionalcommits --legacy-peer-deps
          npm install commitlint@latest --legacy-peer-deps
      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose
  tslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Run Eslint
        run: npm run lint-ts

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Run build
        run: npm run build

      - name: Save build result
        if: ${{ success() }}
        run: echo "Build - success!" > build-result.txt

      - name: Save build result
        if: ${{ failure() }}
        run: echo "Build - error!" > build-result.txt

      - uses: actions/upload-artifact@v3
        with:
          name: build-result
          path: build-result.txt

  integrationtests:
    name: 'Playwright Tests - ${{ matrix.project }} - Shard ${{ matrix.shardIndex }} of ${{ matrix.shardTotal }}'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, webkit]
        shardIndex: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        shardTotal: [10]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Install browsers
        run: npx playwright install --with-deps
      - name: Run integration tests
        run: xvfb-run npx playwright test --project=${{ matrix.project }} --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
  makepr:
    name: Make-PR
    needs: [commitlint, tslint, build, integrationtests]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v3

      - name: Download build result
        uses: actions/download-artifact@v3
        with:
          name: build-result
          path: build-result

      - name: Read build result
        run: |
          build_result=$(cat build-result/build-result.txt)
          echo "Build result: $build_result"
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: feature/automated-pr
          title: Automated Pull Request
          body: |
            This pull request is automatically created based on the results of the pipeline.

            Details:
              - Commit Lint: [Add commit lint details here]
              - TSLint: [Add TSLint details here]
              - Build: $build_result
              - Integration Tests: [Add integration tests details here]